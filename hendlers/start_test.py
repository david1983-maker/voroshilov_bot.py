from hendlers.name import admin, router_start
from hendlers.state import TasteState, SizeState

from keyboards.keyboard import start_kb, forms_kb, kb,style_kb

from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram import types
from aiogram.fsm.context import FSMContext

import time


async def start_message(message: types.Message):
    # await message.answer_sticker('CAACAgIAAxkBAAIOJGgom2fW8FfZDFoaP6TzazTsBREXAAJuBQACP5XMCoY62V2IvLc1NgQ')
    await message.answer(
        f'üñê–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ <b>{message.from_user.full_name}</b>!\n\n –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç\n <b>–ë–æ—Ç –í–æ—Ä–æ—à–∏–ª–æ–≤–ú–µ–±–µ–ª—å !</b>\n\n'
        '–ß—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å\n –ø—Ä–æ–π–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–µ–±–æ–ª—å—à–æ–π —Ç–µ—Å—Ç,\n'
        '—Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ 5 –≤–æ–ø—Ä–æ—Å–æ–≤'
    )
    await message.answer('********************************'
                         '', time.sleep(1),reply_markup=ReplyKeyboardRemove())
    await message.answer('<b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</b>', reply_markup=start_kb)
    await message.bot.send_message(chat_id=admin, text=f"–í–∞—à ID: {message.from_user.id}")


async def test_start(call, state: FSMContext):
    await call.message.answer('–®–∞–≥ 1‚É£',reply_markup=ReplyKeyboardRemove())
    await call.message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –≤–∞—à–µ–π –∫—É—Ö–Ω–∏</b>')
    time.sleep(1)
    photo = FSInputFile('files/form.jpeg')
    await call.message.answer_photo(photo=photo, caption='<b>–ü—Ä—è–º–∞—è</b>')
    photo = FSInputFile('files/form2.jpg', )
    await call.message.answer_photo(photo=photo, caption='<b>–ì-–æ–±—Ä–∞–∑–Ω–∞—è</b>')
    photo = FSInputFile('files/form3.jpg')
    await call.message.answer_photo(photo=photo, caption='<b>–ü-–æ–±—Ä–∞–∑–Ω–∞—è</b>')
    await call.message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –≤–∞—à–µ–π –∫—É—Ö–Ω–∏</b>', reply_markup=forms_kb)
    await call.answer()

    await state.set_state(TasteState.form)


async def set_island(message, state: FSMContext):
    await state.update_data(form=message.text)
    photo = FSInputFile('files/form4.jpg')
    island_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='–î–∞'),
             InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='–ù–µ—Ç')]
        ],
    )
    await message.answer_photo(photo=photo, caption='<b>–ù–∞–ª–∏—á–∏–µ –æ—Å—Ç—Ä–æ–≤–∞: –¥–∞/–Ω–µ—Ç</b>', reply_markup=island_kb)

    await state.set_state(TasteState.island)


async def send_forward2(call, state: FSMContext):
    await state.update_data(island=call.data)
    await call.message.reply("–®–∞–≥ 2‚É£", reply_markup=ReplyKeyboardRemove())
    await call.message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –≤–∞—à–µ–π –∫—É—Ö–Ω–∏</b>')

    photo1 = FSInputFile('files/classic.jpg')
    await call.message.answer_photo(photo=photo1, caption='<b>–ö–ª–∞—Å—Å–∏–∫–∞</b>', )

    photo = FSInputFile('files/hitech.jpg')
    await call.message.answer_photo(photo=photo, caption='<b>–•–∞–π—Ç–µ–∫, —Ä—É—á–∫–∞ –≥–æ–ª–∞</b>')

    photo = FSInputFile('files/neoclassic.jpg')
    await call.message.answer_photo(photo=photo, caption="<b>–ù–µ–æ–∫–ª–∞—Å—Å–∏–∫–∞</b>")

    photo = FSInputFile('files/provans.jpg')
    await call.message.answer_photo(photo=photo, caption="<b>–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å</b>")
    await call.message.answer('<b>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –≤–∞—à–µ–π –∫—É—Ö–Ω–∏</b>', reply_markup=style_kb)
    await call.answer()
    await state.set_state(TasteState.style)


async def send_forward3(message, state: FSMContext):
    await state.update_data(style=message.text)
    await message.reply("–®–∞–≥ 3‚É£", reply_markup=ReplyKeyboardRemove())
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã  –≤–∞—à–µ–π –∫—É—Ö–Ω–∏ üìè', time.sleep(1))
    await message.answer('<b>–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –∫—É—Ö–Ω–∏: </b> ‚úè')
    await state.set_state(SizeState.dlina)


@router_start.message()
async def start(message):
    await message.answer('–ù–∞–∂–º–∏—Ç–µ <b>/start</b> —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ', reply_markup=kb)
